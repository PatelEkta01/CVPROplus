"""
Django settings for atsresume project.

Generated by 'django-admin startproject' using Django 3.1.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path
from urllib.parse import quote_plus
from django.conf import settings
from dotenv import load_dotenv
from datetime import timedelta

load_dotenv(".env")

def get_creds_from_env():
     # This must be removed along with cred.env file once environment variables are set in gitlab.
    # Retrieve credentials from environment variables
    username = os.getenv("MONGO_USERNAME")
    password = os.getenv("MONGO_PASSWORD")
    cluster_name = os.getenv("MONGO_CLUSTER_NAME")
    db_name = os.getenv("MONGO_DB_NAME")

    # Check if any required variable is missing
    if not username or not password or not cluster_name or not db_name:
        raise ValueError("One or more required environment variables are missing!")

    return username,password,cluster_name,db_name

mongo_user,mongo_pass,mongo_cluster,mongo_db = get_creds_from_env()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'y_wg($v2p&cpf+cu8!-sgze5w-9di1&52d16=!!ecd+$4=sfw4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

CORS_ALLOW_ALL_ORIGINS = True


TEST_RUNNER = 'atsresume.no_db_test_runner.NoDbTestRunner'
 

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'authentication',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'resume',
    "admins",
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=15),  # Access token expires in 30 mins
    "REFRESH_TOKEN_LIFETIME": timedelta(days=90),  # Refresh token expires in 7 days
    "ROTATE_REFRESH_TOKENS": True,  # Generates a new refresh token on refresh
    "BLACKLIST_AFTER_ROTATION": True,  # Blacklist old refresh tokens
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "AUTH_HEADER_TYPES": ("Bearer",),
}


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', 
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# EMAIL_BACKEND = 'authentication.custom_email_backend.CustomEmailBackend'
# EMAIL_HOST = os.getenv("EMAIL_HOST")
# EMAIL_PORT = int(os.getenv("EMAIL_PORT", 587))
# EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
# EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
# EMAIL_USE_TLS = os.getenv("EMAIL_USE_TLS")

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Change for Outlook/Yahoo
EMAIL_PORT = 587  # Use 465 for SSL
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')  # Load from env variables
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

ROOT_URLCONF = 'atsresume.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'atsresume.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

escaped_username = quote_plus(mongo_user)
escaped_password = quote_plus(mongo_pass)
MONGO_URI=f'mongodb+srv://{escaped_username}:{escaped_password}@{mongo_cluster}/?retryWrites=true&w=majority&appName=g6user-db'


DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': os.getenv("MONGO_DB_NAME"),
        'CLIENT': {
            'host': f'mongodb+srv://{escaped_username}:{escaped_password}@g6user-db.7hzwm.mongodb.net/ats_resume?retryWrites=true&w=majority',
        }
    }
}

# MONGO_URI=f'mongodb+srv://{escaped_username}:{escaped_password}@g6user-db.7hzwm.mongodb.net/?retryWrites=true&w=majority&appName=g6user-db'


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
GOOGLE_CLIENT_ID = "1020835081770-vq18tvgqbcr1u1dc76cea0u1k9crop91.apps.googleusercontent.com"


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # âœ… Ensure STATIC_ROOT is set

